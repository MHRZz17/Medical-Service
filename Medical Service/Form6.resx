<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bazgasht.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>